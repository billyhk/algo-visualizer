{"version":3,"sources":["containers/Sorter/Sorter.module.css","containers/Traverser/Traverser.module.css","components/UI/Toolbar/Toolbar.module.css","containers/PathFinder/Pathfinder.module.css","components/BarGraph/BarGraph.module.css","components/Grid/Node/Node.module.css","components/UI/Toolbar/Toolbar.js","store/actions/sorterActions.js","store/actions/actionTypes.js","store/actions/pathFindingActions.js","store/actions/traversingActions.js","components/BarGraph/Bar/Bar.js","components/BarGraph/BarGraph.js","components/UI/Selection/Selection.js","algorithms/sorting.js","containers/Sorter/Sorter.js","components/Grid/Node/Node.js","components/Grid/Grid.js","algorithms/pathFinding.js","containers/PathFinder/PathFinder.js","components/Tree/Node/Node.js","components/Tree/Edge/Edge.js","components/Tree/Tree.js","algorithms/traversing.js","containers/Traverser/Traverser.js","App.js","serviceWorker.js","store/reducers/sorterReducer.js","store/reducers/pathFindingReducer.js","store/reducers/traversingReducer.js","index.js"],"names":["module","exports","Toolbar","props","className","classes","to","style","outline","Logo","width","height","viewBox","fill","xmlns","x","y","rx","d","LinksContainer","Link","activeStyle","borderBottom","setSorted","sorted","type","setSorting","sorting","setActive","active","swapValues","index1","index2","replaceValue","index","value","setStart","node","setTarget","deleteWall","clearAll","clearVisitedandPath","setWalls","walls","setFinding","finding","addVisited","addPath","clearTraversed","setTraversing","traversing","addTraversed","Bar","arraySize","useSelector","state","sort","containerStyle","flex","marginTop","transition","barStyle","backgroundImage","margin","borderTop","BarGraph","bars","values","map","i","key","activeValues","includes","Selection","useState","open","setOpen","anchorRef","useRef","React","selectedIndex","setSelectedIndex","options","Object","keys","handleClose","event","current","contains","target","ButtonGroup","variant","color","ref","Button","onClick","size","disabled","aria-controls","undefined","aria-expanded","prevOpen","Popper","anchorEl","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","option","MenuItem","selected","onChange","handleMenuItemClick","getQuickSortAnimations","array","copy","slice","animations","getQuickSortAnimationsHelper","start","end","length","pivot","Math","floor","j","push","swap","partition","getMergeSortAnimations","main","aux","getMergeSortAnimationsHelper","middle","mainStart","auxStart","auxMiddle","merge","heapify","largest","left","right","temp","descriptions","fontWeight","connect","animationSpeed","dispatch","setNewArray","playSortingAnimation","getState","a","b","activeTimer","setTimeout","clearTimeout","swapTimer","replaceTimer","endSortingTimer","actions","stopSortingAnimation","highestTimeoutId","setArraySize","setAnimationSpeed","setCurrent","useEffect","setNewArrayHandler","getBubbleSortAnimations","getHeapSortAnimations","media","window","matchMedia","Sorter","GraphContainer","Graph","ControlsContainer","elevation","borderRadius","paddingBottom","matches","Controls","marginBottom","marginRight","disableElevation","SliderTitle","Slider","newValue","valueLabelDisplay","min","abs","changeDescriptionHandler","About","Node","nodeWidth","icon","fontSize","border","nodeStyle","backgroundColor","onMouseOver","e","preventDefault","mouseDown","draggingStart","draggingTarget","makeWall","makeStart","makeTarget","onMouseDown","setDraggingStartTrue","setDraggingTargetTrue","Grid","setMouseDown","setDraggingStart","setDraggingTarget","path","visited","useDispatch","useCallback","addWall","gridStyle","display","gridTemplateColumns","gridTemplateRows","gap","nodesAreEqual","node1","node2","grid","onMouseUp","onMouseLeave","lowestf","list","low","f","splice","heuristic","getPossibleNeighbors","possibleNeighbors","rightNeighbor","bottomNeighbor","leftNeighbor","topNeighbor","addShortestPathAnimations","prev","at","reverse","unshift","getMazeAnimations","getMazeAnimationsHelper","neighbors","shuffle","getPossibleMazeNeighbors","next","wall","random","PathFinder","gridX","setGridX","gridY","setGridY","playPathFindingAnimation","visitedTimer","pathTimer","endFindingTimer","playMazeAnimation","deleteTimer","endMazeTimer","stopAnimation","clearWalls","setGrid","addEventListener","removeEventListener","el","document","getElementById","offsetWidth","offsetHeight","openList","g","h","p","notBest","getAstarAnimations","queue","shift","getBFSAnimations","found","getDFSAnimationsHelper","getDFSAnimations","GridContainer","speed","justifyContent","alignItems","nodeId","Edge","position","x1","y1","x2","y2","stroke","Tree","edges","setEdges","traversed","traverse","levelStyle","textalign","tree","capacity","nodeIndex","currentLevel","createEdges","rectTree","getBoundingClientRect","pow","rectNode","rectLeft","rectRight","bottom","top","getInOrderAnimations","inOrderRec","getPostOrderAnimations","postOrderRec","getPreOrderAnimations","preOrderRec","Traversing","playTraversingAnimation","endTraversingTimer","stopTraversingAnimation","getLevelOrderAnimations","Traverser","TreeContainer","newHeight","setHeight","max","theme","createMuiTheme","palette","primary","light","typography","fontFamily","join","App","ThemeProvider","component","Boolean","location","hostname","match","initialState","action","reducer","intitialState","clearVisitedAndPath","setPathSpeed","rootReducer","combineReducers","sorterReducer","pathFindingReducer","traversingReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d39edc73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sorter\":\"Sorter_Sorter__1iExk\",\"ControlsContainer\":\"Sorter_ControlsContainer__3uMRF\",\"Graph\":\"Sorter_Graph__31dZi\",\"GraphContainer\":\"Sorter_GraphContainer__2LJkg\",\"SliderTitle\":\"Sorter_SliderTitle__2Lajs\",\"About\":\"Sorter_About__17mh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Traverser\":\"Traverser_Traverser__3xlaW\",\"ControlsContainer\":\"Traverser_ControlsContainer__329Wj\",\"Tree\":\"Traverser_Tree__pgxZX\",\"TreeContainer\":\"Traverser_TreeContainer__2sUP2\",\"SliderTitle\":\"Traverser_SliderTitle__SHm7r\",\"About\":\"Traverser_About__2eu2r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__l-UlI\",\"Logo\":\"Toolbar_Logo__2Y4UH\",\"LinksContainer\":\"Toolbar_LinksContainer__CFj7u\",\"Link\":\"Toolbar_Link__SoMza\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PathFinder\":\"Pathfinder_PathFinder__acwma\",\"Grid\":\"Pathfinder_Grid__14CXs\",\"GridContainer\":\"Pathfinder_GridContainer__xLsjv\",\"ControlsContainer\":\"Pathfinder_ControlsContainer__1E4Zf\",\"About\":\"Pathfinder_About__2mO_5\",\"SliderTitle\":\"Pathfinder_SliderTitle__Y-2nW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BarGraph\":\"BarGraph_BarGraph__3k3xK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Node\":\"Node_Node__3bzST\"};","import React from \"react\";\r\nimport classes from \"./Toolbar.module.css\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nconst Toolbar = props => {\r\n\treturn (\r\n\t\t<nav className={classes.Toolbar}>\r\n\t\t\t<Link to=\"/sorting\" style={{ outline: \"none\" }}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<svg\r\n\t\t\t\t\t\tclassName={classes.Logo}\r\n\t\t\t\t\t\twidth=\"90\"\r\n\t\t\t\t\t\theight=\"31\"\r\n\t\t\t\t\t\tviewBox=\"0 0 153 61\"\r\n\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<rect x=\"96\" y=\"2\" width=\"57\" height=\"57\" rx=\"12\" fill=\"#EE4266\" />\r\n\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\td=\"M26.144 46L22.784 36.832H9.2L6.176 46H2.576L14.192 13.264H17.552L29.504 46H26.144ZM10.304 33.856H21.68L15.824 17.968L10.304 33.856ZM33.3421 46V11.152H36.6061V46H33.3421ZM63.7321 23.536V45.136C63.7321 47.152 63.3161 48.944 62.4841 50.512C61.6521 52.112 60.4841 53.36 58.9801 54.256C57.4761 55.152 55.7641 55.6 53.8441 55.6H44.5321V52.624H53.8441C55.7961 52.624 57.3801 51.92 58.5961 50.512C59.8441 49.104 60.4681 47.312 60.4681 45.136V42.688C59.5401 43.968 58.4041 44.976 57.0601 45.712C55.7161 46.416 54.2441 46.768 52.6441 46.768C50.5001 46.768 48.5801 46.256 46.8841 45.232C45.1881 44.208 43.8601 42.784 42.9001 40.96C41.9401 39.136 41.4601 37.056 41.4601 34.72C41.4601 32.416 41.9241 30.368 42.8521 28.576C43.8121 26.752 45.1241 25.328 46.7881 24.304C48.4841 23.28 50.4041 22.768 52.5481 22.768C54.1801 22.768 55.6681 23.136 57.0121 23.872C58.3881 24.576 59.5401 25.584 60.4681 26.896V23.536H63.7321ZM52.5481 43.792C54.0841 43.792 55.4441 43.408 56.6281 42.64C57.8441 41.872 58.7881 40.8 59.4601 39.424C60.1321 38.048 60.4681 36.496 60.4681 34.768C60.4681 33.04 60.1321 31.488 59.4601 30.112C58.7881 28.736 57.8441 27.664 56.6281 26.896C55.4441 26.128 54.0841 25.744 52.5481 25.744C51.0441 25.744 49.7001 26.128 48.5161 26.896C47.3321 27.664 46.4041 28.736 45.7321 30.112C45.0601 31.456 44.7241 32.992 44.7241 34.72C44.7241 36.48 45.0601 38.048 45.7321 39.424C46.4041 40.8 47.3321 41.872 48.5161 42.64C49.7001 43.408 51.0441 43.792 52.5481 43.792ZM79.5504 46.768C77.4064 46.768 75.4864 46.256 73.7904 45.232C72.0944 44.208 70.7664 42.784 69.8064 40.96C68.8464 39.104 68.3664 37.024 68.3664 34.72C68.3664 32.416 68.8304 30.368 69.7584 28.576C70.7184 26.752 72.0304 25.328 73.6944 24.304C75.3904 23.28 77.3104 22.768 79.4544 22.768C81.5984 22.768 83.5184 23.28 85.2144 24.304C86.9104 25.328 88.2384 26.752 89.1984 28.576C90.1584 30.4 90.6384 32.464 90.6384 34.768C90.6384 37.072 90.1584 39.136 89.1984 40.96C88.2704 42.784 86.9584 44.208 85.2624 45.232C83.5984 46.256 81.6944 46.768 79.5504 46.768ZM79.4544 43.792C80.9904 43.792 82.3504 43.408 83.5344 42.64C84.7504 41.872 85.6944 40.8 86.3664 39.424C87.0384 38.048 87.3744 36.496 87.3744 34.768C87.3744 33.04 87.0384 31.488 86.3664 30.112C85.6944 28.736 84.7504 27.664 83.5344 26.896C82.3504 26.128 80.9904 25.744 79.4544 25.744C77.9504 25.744 76.6064 26.128 75.4224 26.896C74.2384 27.664 73.3104 28.736 72.6384 30.112C71.9664 31.456 71.6304 32.992 71.6304 34.72C71.6304 36.48 71.9664 38.048 72.6384 39.424C73.3104 40.8 74.2384 41.872 75.4224 42.64C76.6064 43.408 77.9504 43.792 79.4544 43.792Z\"\r\n\t\t\t\t\t\t\tfill=\"#FAFAFA\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\td=\"M124.723 51.25C124.056 51.25 123.339 51.15 122.573 50.95C121.839 50.7167 121.306 50.3 120.973 49.7C120.206 47.1 119.406 44.4333 118.573 41.7C117.739 38.9667 116.906 36.2833 116.073 33.65C115.139 30.55 114.139 27.3333 113.073 24C112.006 20.6333 111.006 17.4167 110.073 14.35C109.873 13.6167 109.989 12.9833 110.423 12.45C110.856 11.8833 111.473 11.4667 112.273 11.2C112.773 11.0667 113.206 11 113.573 11C114.706 11 115.439 11.5667 115.773 12.7L119.473 24.55C119.806 25.75 120.189 27.0667 120.623 28.5C121.089 29.9333 121.556 31.4 122.023 32.9C122.489 34.4 122.956 35.9 123.423 37.4C123.889 38.8667 124.323 40.2333 124.723 41.5C125.356 39.4 126.039 37.1333 126.773 34.7C127.539 32.2333 128.306 29.7333 129.073 27.2C129.873 24.6667 130.656 22.1667 131.423 19.7C132.189 17.2 132.906 14.8667 133.573 12.7C133.939 11.5667 134.656 11 135.723 11C136.123 11 136.589 11.0667 137.123 11.2C138.956 11.7 139.673 12.75 139.273 14.35C137.473 20.1833 135.656 26.0667 133.823 32C131.989 37.9333 130.173 43.8333 128.373 49.7C128.106 50.3667 127.606 50.8 126.873 51C126.173 51.1667 125.456 51.25 124.723 51.25Z\"\r\n\t\t\t\t\t\t\tfill=\"#FAFAFA\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\r\n\t\t\t<div className={classes.LinksContainer}>\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tclassName={classes.Link}\r\n\t\t\t\t\tto=\"/sorting\"\r\n\t\t\t\t\tactiveStyle={{ borderBottom: \".3rem solid #EE4266\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\tSorting\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tclassName={classes.Link}\r\n\t\t\t\t\tto=\"/path-finding\"\r\n\t\t\t\t\tactiveStyle={{ borderBottom: \".3rem solid #EE4266\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\tPath Finding\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tclassName={classes.Link}\r\n\t\t\t\t\tto=\"/traversing\"\r\n\t\t\t\t\tactiveStyle={{ borderBottom: \".3rem solid #EE4266\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\tTraversing\r\n\t\t\t\t</NavLink>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Toolbar;\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const setNewArray = () => {\r\n\treturn { type: actionTypes.SET_NEW_ARRAY };\r\n};\r\n\r\nexport const playSortingAnimation = animations => {\r\n\treturn (dispatch, getState) => {\r\n\t\tlet animationSpeed = getState().sort.animationSpeed;\r\n\t\tdispatch(setSorting(true));\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tlet [a, b, type] = animations[i];\r\n\t\t\tif (type === \"active\") {\r\n\t\t\t\tlet activeTimer = setTimeout(() => {\r\n\t\t\t\t\tdispatch(setActive([a, b]));\r\n\t\t\t\t\tclearTimeout(activeTimer);\r\n\t\t\t\t}, 800 + animationSpeed * i);\r\n\t\t\t}\r\n\t\t\tif (type === \"swap\") {\r\n\t\t\t\tlet swapTimer = setTimeout(() => {\r\n\t\t\t\t\tdispatch(swapValues(a, b));\r\n\t\t\t\t\tclearTimeout(swapTimer);\r\n\t\t\t\t}, 800 + animationSpeed * i);\r\n\t\t\t}\r\n\t\t\tif (type === \"replace\") {\r\n\t\t\t\tlet replaceTimer = setTimeout(() => {\r\n\t\t\t\t\tdispatch(replaceValue(a, b));\r\n\t\t\t\t\tclearTimeout(replaceTimer);\r\n\t\t\t\t}, 800 + animationSpeed * i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet endSortingTimer = setTimeout(() => {\r\n\t\t\tdispatch(setSorting(false));\r\n\t\t\tdispatch(setActive([]));\r\n\t\t\tdispatch(setSorted(true))\r\n\t\t\tclearTimeout(endSortingTimer);\r\n\t\t}, 800 + animationSpeed * animations.length);\r\n\t};\r\n};\r\n\r\nexport const stopSortingAnimation = () => {\r\n\treturn dispatch => {\r\n\t\tlet highestTimeoutId = setTimeout(\";\");\r\n\t\tfor (let i = 0; i < highestTimeoutId; i++) {\r\n\t\t\tclearTimeout(i);\r\n\t\t}\r\n\t\tdispatch(setActive([]));\r\n\t\tdispatch(setSorting(false));\r\n\t};\r\n};\r\n\r\nexport const setArraySize = arraySize => {\r\n\treturn { type: actionTypes.SET_ARRAY_SIZE, arraySize };\r\n};\r\n\r\nexport const setAnimationSpeed = animationSpeed => {\r\n\treturn { type: actionTypes.SET_ANIMATION_SPEED, animationSpeed }\r\n}\r\n\r\nexport const setSorted = sorted => {\r\n\treturn {type: actionTypes.SET_SORTED, sorted}\r\n}\r\n\r\nconst setSorting = sorting => {\r\n\treturn { type: actionTypes.SET_SORTING, sorting };\r\n};\r\n\r\nconst setActive = active => {\r\n\treturn { type: actionTypes.SET_ACTIVE, active };\r\n};\r\n\r\nconst swapValues = (index1, index2) => {\r\n\treturn { type: actionTypes.SWAP_VALUES, index1, index2 };\r\n};\r\n\r\nconst replaceValue = (index, value) => {\r\n\treturn { type: actionTypes.REPLACE_VALUE, index, value };\r\n};\r\n","export const SET_NEW_ARRAY = \"SET_NEW_ARRAY\";\r\nexport const SET_SORTING = \"SET_SORTING\";\r\nexport const SET_SORTED = 'SET_SORTED'\r\nexport const SET_ARRAY_SIZE = \"SET_ARRAY_SIZE\";\r\nexport const SET_ANIMATION_SPEED = 'SET_ANIMATION_SPEED'\r\nexport const SET_ACTIVE = \"SET_ACTIVE\";\r\nexport const SWAP_VALUES = \"SWAP_VALUES\";\r\nexport const REPLACE_VALUE = \"REPLACE_VALUE\";\r\n\r\nexport const SET_START = \"SET_START\"\r\nexport const SET_TARGET = \"SET_TARGET\"\r\nexport const SET_WALLS = \"SET_WALLS\"\r\nexport const ADD_WALL = \"ADD_WALL\"\r\nexport const DELETE_WALL = \"DELETE_WALL\"\r\nexport const ADD_VISITED = \"ADD_VISITED\"\r\nexport const ADD_PATH = \"ADD_PATH\"\r\nexport const CLEAR_ALL = 'CLEAR_ALL'\r\nexport const CLEAR_VISITED_AND_PATH = 'CLEAR_VISITED_AND_PATH'\r\nexport const SET_FINDING = 'SET_FINDING'\r\nexport const SET_PATH_SPEED = 'SET_PATH_SPEED'\r\n\r\nexport const SET_HEIGHT = \"SET_HEIGHT\"\r\nexport const SET_TRAVERSE_SPEED = \"SET_TRAVERSE_SPEED\"\r\nexport const SET_TRAVERSING = \"SET_TRAVERSING\"\r\nexport const ADD_TRAVERSED = \"ADD_TRAVERSED\"\r\nexport const CLEAR_TRAVERSED = \"CLEAR_TRAVERSED\"","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const setStart = node => {\r\n\treturn { type: actionTypes.SET_START, node };\r\n};\r\n\r\nexport const setTarget = node => {\r\n\treturn { type: actionTypes.SET_TARGET, node };\r\n};\r\n\r\nexport const addWall = node => {\r\n\treturn { type: actionTypes.ADD_WALL, node };\r\n};\r\n\r\nexport const deleteWall = node => {\r\n\treturn { type: actionTypes.DELETE_WALL, node };\r\n};\r\n\r\nexport const playPathFindingAnimation = animations => {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst animationSpeed = getState().path.animationSpeed;\r\n\t\tdispatch(clearVisitedandPath());\r\n\t\tdispatch(setFinding(true));\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tlet [x, y, type] = animations[i];\r\n\t\t\tif (type === \"visited\") {\r\n\t\t\t\tlet visitedTimer = setTimeout(() => {\r\n\t\t\t\t\tdispatch(addVisited([x, y]));\r\n\t\t\t\t\tclearTimeout(visitedTimer);\r\n\t\t\t\t}, 800 + animationSpeed * 1.5 * i);\r\n\t\t\t}\r\n\t\t\tif (type === \"path\") {\r\n\t\t\t\tlet pathTimer = setTimeout(() => {\r\n\t\t\t\t\tdispatch(addPath([x, y]));\r\n\t\t\t\t\tclearTimeout(pathTimer);\r\n\t\t\t\t}, 1800 + animationSpeed * 1.5 * i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet endFindingTimer = setTimeout(() => {\r\n\t\t\tdispatch(setFinding(false));\r\n\t\t\tclearTimeout(endFindingTimer);\r\n\t\t}, 1800 + animationSpeed * 1.5 *  animations.length);\r\n\t};\r\n};\r\n\r\nexport const playMazeAnimation = animations => {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst animationSpeed = getState().path.animationSpeed;\r\n\t\tdispatch(clearAll());\r\n\t\tdispatch(setFinding(true));\r\n\t\tdispatch(setWalls(animations[0]));\r\n\t\tfor (let i = 1; i < animations.length; i++) {\r\n\t\t\tlet deleteTimer = setTimeout(() => {\r\n\t\t\t\tdispatch(deleteWall(animations[i]));\r\n\t\t\t\tclearTimeout(deleteTimer);\r\n\t\t\t}, 800 + animationSpeed * 1.5 * i);\r\n\t\t}\r\n\t\tlet endMazeTimer = setTimeout(() => {\r\n\t\t\tdispatch(setFinding(false));\r\n\t\t\tclearTimeout(endMazeTimer);\r\n\t\t}, 800 + animationSpeed * 1.5 * animations.length);\r\n\t};\r\n};\r\n\r\nexport const stopAnimation = () => {\r\n\treturn dispatch => {\r\n\t\tlet highestTimeoutId = setTimeout(\";\");\r\n\t\tfor (let i = 0; i < highestTimeoutId; i++) {\r\n\t\t\tclearTimeout(i);\r\n\t\t}\r\n\t\tdispatch(clearVisitedandPath());\r\n\t\tdispatch(setFinding(false));\r\n\t};\r\n};\r\n\r\nexport const clearAll = () => {\r\n\treturn { type: actionTypes.CLEAR_ALL };\r\n};\r\n\r\nexport const clearVisitedandPath = () => {\r\n\treturn { type: actionTypes.CLEAR_VISITED_AND_PATH };\r\n};\r\n\r\nexport const setPathSpeed = speed => {\r\n\treturn { type: actionTypes.SET_PATH_SPEED, speed };\r\n};\r\n\r\nconst setWalls = walls => {\r\n\treturn { type: actionTypes.SET_WALLS, walls };\r\n};\r\n\r\nconst setFinding = finding => {\r\n\treturn { type: actionTypes.SET_FINDING, finding };\r\n};\r\n\r\nconst addVisited = node => {\r\n\treturn { type: actionTypes.ADD_VISITED, node };\r\n};\r\n\r\nconst addPath = node => {\r\n\treturn { type: actionTypes.ADD_PATH, node };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const setHeight = height => {\r\n\treturn { type: actionTypes.SET_HEIGHT, height };\r\n};\r\n\r\nexport const setTraverseSpeed = speed => {\r\n\treturn { type: actionTypes.SET_TRAVERSE_SPEED, speed };\r\n};\r\n\r\nexport const playTraversingAnimation = animations => {\r\n\treturn (dispatch, getState) => {\r\n      const animationSpeed = getState().traverse.animationSpeed;\r\n      dispatch(clearTraversed())\r\n\t\tdispatch(setTraversing(true));\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tlet visitedTimer = setTimeout(() => {\r\n\t\t\t\tdispatch(addTraversed(animations[i]));\r\n\t\t\t\tclearTimeout(visitedTimer);\r\n\t\t\t}, 800 + animationSpeed * i * 10);\r\n\t\t}\r\n\t\tlet endTraversingTimer = setTimeout(() => {\r\n\t\t\tdispatch(setTraversing(false));\r\n\t\t\tclearTimeout(endTraversingTimer);\r\n\t\t}, 800 + animationSpeed * animations.length * 10);\r\n\t};\r\n};\r\n\r\nexport const stopTraversingAnimation = () => {\r\n\treturn dispatch => {\r\n\t\tlet highestTimeoutId = setTimeout(\";\");\r\n\t\tfor (let i = 0; i < highestTimeoutId; i++) {\r\n\t\t\tclearTimeout(i);\r\n\t\t}\r\n      dispatch(setTraversing(false));\r\n      dispatch(clearTraversed())\r\n\t};\r\n};\r\n\r\nexport const clearTraversed = () => {\r\n\treturn { type: actionTypes.CLEAR_TRAVERSED };\r\n};\r\n\r\nconst setTraversing = traversing => {\r\n\treturn { type: actionTypes.SET_TRAVERSING, traversing };\r\n};\r\n\r\nconst addTraversed = index => {\r\n\treturn { type: actionTypes.ADD_TRAVERSED, index };\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Bar = props => {\r\n\tconst arraySize = useSelector(state => state.sort.arraySize);\r\n\tconst sorting = useSelector(state => state.sort.sorting)\r\n\r\n\tconst containerStyle = {\r\n\t\theight: `${(props.value / arraySize) * 100}%`,\r\n\t\tflex: 1,\r\n\t\tmarginTop: \"auto\",\r\n\t\ttransition: sorting ? 'none' : 'all .3s ease'\r\n\t};\r\n\r\n\tconst barStyle = {\r\n\t\tbackgroundImage: `linear-gradient(to bottom, ${props.fill}, 90%, white)`,\r\n\t\theight: \"100%\",\r\n\t\tmargin: \"0 12%\",\r\n\t\tborderTop: `2px solid ${props.fill === '#EE4266' ? '#EE4266' : '#05668d'}`\r\n\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={containerStyle}>\r\n\t\t\t<div style={barStyle} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Bar;","import React from \"react\";\r\nimport Bar from \"./Bar/Bar\";\r\nimport classes from \"./BarGraph.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst BarGraph = props => {\r\n\tconst sorted = useSelector(state => state.sort.sorted);\r\n\tconst fill = sorted ? \"#05668d\" : '#c3e5f3';\r\n\tconst bars = props.values.map((value, i) => (\r\n\t\t<Bar value={value} key={i} fill={props.activeValues.includes(i) ? \"#EE4266\" : fill} />\r\n\t));\r\n\treturn <div className={classes.BarGraph}>{bars}</div>;\r\n};\r\n\r\nexport default BarGraph;\r\n","import React, { useState, useRef } from \"react\";\r\nimport {\r\n\tButton,\r\n\tButtonGroup,\r\n\tClickAwayListener,\r\n\tGrow,\r\n\tPaper,\r\n\tPopper,\r\n\tMenuItem,\r\n\tMenuList,\r\n} from \"@material-ui/core\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\n\r\nconst Selection = (props) => {\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst anchorRef = useRef(null);\r\n\tconst [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n\tconst options = Object.keys(props.options);\r\n\r\n\tconst handleMenuItemClick = (event, index) => {\r\n\t\tsetSelectedIndex(index);\r\n\t\tprops.onChange(index)\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst handleToggle = () => {\r\n\t\tsetOpen(prevOpen => !prevOpen);\r\n\t};\r\n\r\n\tconst handleClose = event => {\r\n\t\tif (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} style={{width: \"200px\"}}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={props.options[options[selectedIndex]]}\r\n\t\t\t\t\tsize=\"large\"\r\n               disabled={props.disabled}\r\n               style={{width: \"200px\"}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{options[selectedIndex]}\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\taria-controls={open ? \"split-button-menu\" : undefined}\r\n\t\t\t\t\taria-expanded={open ? \"true\" : undefined}\r\n\t\t\t\t\tonClick={handleToggle}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ArrowDropDownIcon />\r\n\t\t\t\t</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t\t<Popper open={open} anchorEl={anchorRef.current} transition disablePortal>\r\n\t\t\t\t{({ TransitionProps, placement }) => (\r\n\t\t\t\t\t<Grow\r\n\t\t\t\t\t\t{...TransitionProps}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttransformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Paper style={{width: '200px'}}>\r\n\t\t\t\t\t\t\t<ClickAwayListener onClickAway={handleClose}>\r\n\t\t\t\t\t\t\t\t<MenuList id=\"split-button-menu\">\r\n\t\t\t\t\t\t\t\t\t{options.map((option, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\tkey={option}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={index === selectedIndex}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={event => handleMenuItemClick(event, index)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</MenuList>\r\n\t\t\t\t\t\t\t</ClickAwayListener>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grow>\r\n\t\t\t\t)}\r\n\t\t\t</Popper>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Selection","//BUBBLE SORT\r\n\r\nexport function getBubbleSortAnimations(array) {\r\n\tconst copy = array.slice();\r\n\tconst animations = [];\r\n\tfor (let i = 0; i < copy.length - 1; i++) {\r\n\t\tfor (let j = 0; j < copy.length - i - 1; j++) {\r\n\t\t\tanimations.push([j, j + 1, \"active\"]);\r\n\t\t\tif (copy[j] > copy[j + 1]) {\r\n\t\t\t\tanimations.push([j, j + 1, \"swap\"]);\r\n\t\t\t\tswap(copy, j, j + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn animations;\r\n}\r\n\r\n//QUICK SORT\r\n\r\nexport function getQuickSortAnimations(array) {\r\n\tconst copy = array.slice();\r\n\tconst animations = [];\r\n\tgetQuickSortAnimationsHelper(copy, 0, copy.length - 1, animations);\r\n\treturn animations;\r\n}\r\n\r\nfunction getQuickSortAnimationsHelper(array, start, end, animations) {\r\n\tlet index;\r\n\tif (array.length > 1) {\r\n\t\tindex = partition(array, start, end, animations);\r\n\t\tif (start < index - 1) {\r\n\t\t\tgetQuickSortAnimationsHelper(array, start, index - 1, animations);\r\n\t\t}\r\n\t\tif (index < end) {\r\n\t\t\tgetQuickSortAnimationsHelper(array, index, end, animations);\r\n\t\t}\r\n\t}\r\n\treturn array;\r\n}\r\n\r\nfunction partition(array, start, end, animations) {\r\n\tlet pivot = array[Math.floor((end + start) / 2)];\r\n\tlet i = start;\r\n\tlet j = end;\r\n\twhile (i <= j) {\r\n\t\tanimations.push([i, j, \"active\"]);\r\n\t\twhile (array[i] < pivot) {\r\n\t\t\ti++;\r\n\t\t\tanimations.push([i, j, \"active\"]);\r\n\t\t}\r\n\t\twhile (array[j] > pivot) {\r\n\t\t\tj--;\r\n\t\t\tanimations.push([i, j, \"active\"]);\r\n\t\t}\r\n\t\tif (i <= j) {\r\n\t\t\tanimations.push([i, j, \"swap\"]);\r\n\t\t\tswap(array, i, j);\r\n\t\t\ti++;\r\n\t\t\tj--;\r\n\t\t}\r\n\t}\r\n\treturn i;\r\n}\r\n\r\n//MERGE SORT\r\n\r\nexport function getMergeSortAnimations(array) {\r\n\tconst main = array.slice();\r\n\tconst aux = array.slice();\r\n\tconst animations = [];\r\n\tgetMergeSortAnimationsHelper(main, 0, main.length - 1, aux, animations);\r\n\treturn animations;\r\n}\r\n\r\nfunction getMergeSortAnimationsHelper(main, start, end, aux, animations) {\r\n\tif (start === end) return;\r\n\tlet middle = Math.floor((start + end) / 2);\r\n\tgetMergeSortAnimationsHelper(aux, start, middle, main, animations);\r\n\tgetMergeSortAnimationsHelper(aux, middle + 1, end, main, animations);\r\n\tmerge(main, start, middle, end, aux, animations);\r\n}\r\n\r\nfunction merge(main, start, middle, end, aux, animations) {\r\n\tlet mainStart = start;\r\n\tlet auxStart = start;\r\n\tlet auxMiddle = middle + 1;\r\n\twhile (auxStart <= middle && auxMiddle <= end) {\r\n\t\tanimations.push([auxStart, auxMiddle, \"active\"]);\r\n\t\tif (aux[auxStart] <= aux[auxMiddle]) {\r\n\t\t\tanimations.push([mainStart, aux[auxStart], \"replace\"]);\r\n\t\t\tmain[mainStart] = aux[auxStart];\r\n\t\t\tmainStart++;\r\n\t\t\tauxStart++;\r\n\t\t} else {\r\n\t\t\tanimations.push([mainStart, aux[auxMiddle], \"replace\"]);\r\n\t\t\tmain[mainStart] = aux[auxMiddle];\r\n\t\t\tmainStart++;\r\n\t\t\tauxMiddle++;\r\n\t\t}\r\n\t}\r\n\twhile (auxStart <= middle) {\r\n\t\tanimations.push([auxStart, auxStart, \"active\"]);\r\n\t\tanimations.push([mainStart, aux[auxStart], \"replace\"]);\r\n\t\tmain[mainStart] = aux[auxStart];\r\n\t\tmainStart++;\r\n\t\tauxStart++;\r\n\t}\r\n\twhile (auxMiddle <= end) {\r\n\t\tanimations.push([auxMiddle, auxMiddle, \"active\"]);\r\n\t\tanimations.push([mainStart, aux[auxMiddle], \"replace\"]);\r\n\t\tmain[mainStart] = aux[auxMiddle];\r\n\t\tmainStart++;\r\n\t\tauxMiddle++;\r\n\t}\r\n}\r\n\r\n//HEAP SORT\r\n\r\nexport function getHeapSortAnimations(array) {\r\n\tconst copy = array.slice();\r\n\tconst animations = [];\r\n\tlet length = array.length;\r\n\tlet i = Math.floor(length / 2 - 1);\r\n\tlet j = length - 1;\r\n\twhile (i >= 0) {\r\n\t\theapify(copy, length, i, animations);\r\n\t\ti--;\r\n\t}\r\n\twhile (j >= 0) {\r\n\t\tanimations.push([0, j, \"active\"]);\r\n\t\tanimations.push([0, j, \"swap\"]);\r\n\t\tswap(copy, 0, j);\r\n\t\theapify(copy, j, 0, animations);\r\n\t\tj--;\r\n\t}\r\n\treturn animations;\r\n}\r\n\r\nfunction heapify(array, length, i, animations) {\r\n\tlet largest = i;\r\n\tlet left = i * 2 + 1;\r\n\tlet right = left + 1;\r\n\tanimations.push([largest, left, \"active\"]);\r\n\tanimations.push([largest, right, \"active\"]);\r\n\tif (left < length && array[left] > array[largest]) {\r\n\t\tlargest = left;\r\n\t}\r\n\tif (right < length && array[right] > array[largest]) {\r\n\t\tlargest = right;\r\n\t}\r\n\tif (largest !== i) {\r\n\t\tanimations.push([i, largest, \"swap\"]);\r\n\t\tswap(array, i, largest);\r\n\t\theapify(array, length, largest, animations);\r\n\t}\r\n\treturn array;\r\n}\r\n\r\n//HELPER\r\n\r\nfunction swap(array, i, j) {\r\n\tlet temp = array[i];\r\n\tarray[i] = array[j];\r\n\tarray[j] = temp;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport BarGraph from \"../../components/BarGraph/BarGraph\";\r\nimport classes from \"./Sorter.module.css\";\r\nimport { Slider, Button, Paper } from \"@material-ui/core\";\r\nimport Selection from \"../../components/UI/Selection/Selection\";\r\nimport {\r\n\tgetBubbleSortAnimations,\r\n\tgetQuickSortAnimations,\r\n\tgetMergeSortAnimations,\r\n\tgetHeapSortAnimations,\r\n} from \"../../algorithms/sorting\";\r\n\r\nconst descriptions = [\r\n\t<p>\r\n\t\t<span style={{ fontWeight: \"600\" }}>Bubble sort</span> is a simple sorting algorithm that\r\n\t\trepeatedly steps through the list, compares adjacent elements, and swaps them if they are in\r\n\t\tthe wrong order.\r\n\t</p>,\r\n\t<p>\r\n\t\t<span style={{ fontWeight: 600 }}>Quick sort</span> is a Divide and Conquer algorithm. It\r\n\t\tpicks an element as a pivot and partitions the given array around the picked pivot.\r\n\t</p>,\r\n\r\n\t<p>\r\n\t\tLike quick sort, <span style={{ fontWeight: 600 }}>merge sort</span> is a Divide and Conquer\r\n\t\talgorithm. It divides the input array into two halves, calls itself for the two halves, and then\r\n\t\tmerges the two sorted halves.\r\n\t</p>,\r\n\t<p>\r\n\t\t<span style={{ fontWeight: 600 }}>Heap sort</span> is a comparison based sorting technique\r\n\t\tbased on a Binary Heap. It finds the maximum element and places it at the end of the array. The same\r\n\t\tprocess is repeated for the remaining elements.\r\n\t</p>,\r\n];\r\n\r\nconst Sorter = props => {\r\n\tconst [current, setCurrent] = useState(0);\r\n\tuseEffect(() => {\r\n\t\tsetNewArrayHandler();\r\n\t\treturn () => {\r\n\t\t\tprops.stopSortingAnimation();\r\n\t\t};\r\n\t}, []);\r\n\r\n\tconst setNewArrayHandler = () => {\r\n\t\tprops.setSorted(false);\r\n\t\tprops.setNewArray();\r\n\t};\r\n\r\n\tconst changeDescriptionHandler = index => {\r\n\t\tsetCurrent(index);\r\n\t};\r\n\r\n\tconst sizeChangeHandler = (event, newValue) => {\r\n\t\tprops.setArraySize(newValue);\r\n\t\tprops.setSorted(false);\r\n\t\tprops.setNewArray();\r\n\t};\r\n\r\n\tconst animationSpeedChangeHandler = (event, newValue) => {\r\n\t\tprops.setAnimationSpeed(Math.abs(newValue - 110));\r\n\t};\r\n\r\n\tconst options = {\r\n\t\t\"Bubble Sort\": () => props.playSortingAnimation(getBubbleSortAnimations(props.array)),\r\n\t\t\"Quick Sort\": () => props.playSortingAnimation(getQuickSortAnimations(props.array)),\r\n\t\t\"Merge Sort\": () => props.playSortingAnimation(getMergeSortAnimations(props.array)),\r\n\t\t\"Heap Sort\": () => props.playSortingAnimation(getHeapSortAnimations(props.array)),\r\n\t};\r\n\r\n\tlet media = window.matchMedia(\"(max-width: 700px)\");\r\n\treturn (\r\n\t\t<div className={classes.Sorter}>\r\n\t\t\t<div className={classes.GraphContainer}>\r\n\t\t\t\t<div className={classes.Graph}>\r\n\t\t\t\t\t<BarGraph values={props.array} activeValues={props.active} sorting={props.sorting} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Paper\r\n\t\t\t\tclassName={classes.ControlsContainer}\r\n\t\t\t\televation={10}\r\n\t\t\t\tstyle={{ borderRadius: 0, paddingBottom: media.matches ? \"4rem\" : \"0\" }}\r\n\t\t\t>\r\n\t\t\t\t<div className={classes.Controls}>\r\n\t\t\t\t\t<h1 style={{ marginBottom: \"3rem\" }}>Sorting</h1>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={setNewArrayHandler}\r\n\t\t\t\t\t\tdisabled={props.sorting}\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tstyle={{ marginRight: \".8rem\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tset new\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={props.stopSortingAnimation}\r\n\t\t\t\t\t\tdisabled={!props.sorting}\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tdisableElevation\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tstop\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<p className={classes.SliderTitle}>Array Size</p>\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\tonChange={sizeChangeHandler}\r\n\t\t\t\t\t\tvalue={props.arraySize}\r\n\t\t\t\t\t\tvalueLabelDisplay\r\n\t\t\t\t\t\tdisabled={props.sorting}\r\n\t\t\t\t\t\tmin={10}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p className={classes.SliderTitle}>Animation Speed</p>\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\tonChange={animationSpeedChangeHandler}\r\n\t\t\t\t\t\tvalue={Math.abs(props.animationSpeed - 110)}\r\n\t\t\t\t\t\tdisabled={props.sorting}\r\n\t\t\t\t\t\tvalueLabelDisplay\r\n\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\tstyle={{ marginBottom: \"3rem\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Selection\r\n\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\tdisabled={props.sorting}\r\n\t\t\t\t\t\tonChange={index => changeDescriptionHandler(index)}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<div className={classes.About}>{descriptions[current]}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tsorting: state.sort.sorting,\r\n\t\tarray: state.sort.array,\r\n\t\tarraySize: state.sort.arraySize,\r\n\t\tactive: state.sort.active,\r\n\t\tanimationSpeed: state.sort.animationSpeed,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tsetNewArray: () => dispatch(actions.setNewArray()),\r\n\t\tplaySortingAnimation: animations => dispatch(actions.playSortingAnimation(animations)),\r\n\t\tstopSortingAnimation: () => dispatch(actions.stopSortingAnimation()),\r\n\t\tsetSorted: sorted => dispatch(actions.setSorted(sorted)),\r\n\t\tsetArraySize: arraySize => dispatch(actions.setArraySize(arraySize)),\r\n\t\tsetAnimationSpeed: animationSpeed => dispatch(actions.setAnimationSpeed(animationSpeed)),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sorter);\r\n","import React from \"react\";\r\nimport TargetIcon from \"@material-ui/icons/MyLocation\";\r\nimport StartIcon from \"@material-ui/icons/TripOrigin\";\r\nimport classes from './Node.module.css'\r\n\r\nconst Node = props => {\r\n\tconst { type } = props;\r\n\tconst onMouseOverHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tif (\r\n\t\t\tprops.mouseDown &&\r\n\t\t\t!(\r\n\t\t\t\tprops.start ||\r\n\t\t\t\tprops.target ||\r\n\t\t\t\ttype === \"wall\" ||\r\n\t\t\t\tprops.draggingStart ||\r\n\t\t\t\tprops.draggingTarget\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tprops.makeWall();\r\n\t\t}\r\n\r\n\t\tif (props.draggingStart && !(props.target || type === \"wall\")) {\r\n\t\t\tprops.makeStart();\r\n\t\t}\r\n\r\n\t\tif (props.draggingTarget && !(props.start || type === \"wall\")) {\r\n\t\t\tprops.makeTarget();\r\n\t\t}\r\n\t};\r\n\r\n\tconst onMouseDownHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tif (props.start) {\r\n\t\t\tprops.setDraggingStartTrue();\r\n\t\t} else if (props.target) {\r\n\t\t\tprops.setDraggingTargetTrue();\r\n\t\t} else if (!type === \"wall\") {\r\n\t\t\tprops.makeWall();\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteWallHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tif (type === \"wall\") {\r\n\t\t\tprops.deleteWall();\r\n\t\t}\r\n\t};\r\n\r\n\tlet nodeWidth = 25;\r\n\t\tlet media = window.matchMedia(\"(max-width: 700px)\");\r\n\t\tif (media.matches) {\r\n\t\t\tnodeWidth = 15;\r\n\t\t}\r\n\r\n\tlet icon = null;\r\n\tif (props.start) {\r\n\t\ticon = (\r\n\t\t\t<StartIcon\r\n\t\t\t\tstyle={{ color: type === \"path\" ? \"#fafafa\" : \"#05668d\", fontSize: `${nodeWidth}px` }}\r\n\t\t\t/>\r\n\t\t);\r\n\t} else if (props.target) {\r\n\t\ticon = (\r\n\t\t\t<TargetIcon\r\n\t\t\t\tstyle={{ color: type === \"path\" ? \"#fafafa\" : \"#EE4266\", fontSize: `${nodeWidth}px` }}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\tlet fill = \"#fafafa\";\r\n\tlet border = \"none\";\r\n\tswitch (type) {\r\n\t\tcase \"wall\":\r\n\t\t\tfill = \"#e0e0e0\";\r\n\t\t\tborder = \"1px ridge #9e9e9e\";\r\n\t\t\tbreak;\r\n\t\tcase \"path\":\r\n\t\t\tfill = \"#05668d\";\r\n\t\t\tbreak;\r\n\t\tcase \"visited\":\r\n\t\t\tfill = \"#c3e5f3\";\r\n\t\t\tborder = \"1px solid #fafafa\";\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t}\r\n\r\n\t\r\n\r\n\tconst nodeStyle = {\r\n\t\tbackgroundColor: fill,\r\n\t\tborder: border,\r\n\t\tborderRadius: \"3px\",\r\n\t\theight: nodeWidth + 'px',\r\n\t\twidth: nodeWidth + 'px',\r\n\t\ttransition: \"all .1s ease-in\",\r\n\t};\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={classes.Node}\r\n\t\t\tstyle={nodeStyle}\r\n\t\t\tonMouseOver={onMouseOverHandler}\r\n\t\t\tonMouseDown={onMouseDownHandler}\r\n\t\t\tonClick={deleteWallHandler}\r\n\t\t>\r\n\t\t\t{icon}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Node;\r\n","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport Node from \"./Node/Node\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/\";\r\n\r\nconst Grid = props => {\r\n\tconst [mouseDown, setMouseDown] = useState(false);\r\n\tconst [draggingStart, setDraggingStart] = useState(false);\r\n\tconst [draggingTarget, setDraggingTarget] = useState(false);\r\n\r\n\tconst start = useSelector(state => state.path.start);\r\n\tconst target = useSelector(state => state.path.target);\r\n\tconst walls = useSelector(state => state.path.walls);\r\n\tconst visited = useSelector(state => state.path.visited);\r\n\tconst path = useSelector(state => state.path.path);\r\n\tconst finding = useSelector(state => state.path.finding);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst setStart = useCallback(node => dispatch(actions.setStart(node)), [dispatch]);\r\n\tconst setTarget = useCallback(node => dispatch(actions.setTarget(node)), [dispatch]);\r\n\tconst addWall = useCallback(node => dispatch(actions.addWall(node)), [dispatch]);\r\n\tconst deleteWall = useCallback(node => dispatch(actions.deleteWall(node)), [dispatch]);\r\n\tconst clearVisitedandPath = () => dispatch(actions.clearVisitedandPath());\r\n\t\r\n\tconst gridStyle = {\r\n\t\tdisplay: \"grid\",\r\n\t\tgridTemplateColumns: `repeat(${props.width}, max-content)`,\r\n\t\tgridTemplateRows: `repeat(${props.height}, max-content)`,\r\n\t\tgap: \"1px\",\r\n\t};\r\n\r\n\tconst onMouseDownHandler = e => {\r\n\t\tif (!finding) {\r\n\t\t\te.preventDefault();\r\n\t\t\tsetMouseDown(true);\r\n\t\t\tclearVisitedandPath();\r\n\t\t}\r\n\t};\r\n\r\n\tconst onMouseUpHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMouseDown(false);\r\n\t\tsetDraggingStart(false);\r\n\t\tsetDraggingTarget(false);\r\n\t};\r\n\r\n\tconst onMouseLeaveHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMouseDown(false);\r\n\t\tsetDraggingStart(false);\r\n\t\tsetDraggingTarget(false);\r\n\t};\r\n\r\n\tconst setDraggingStartTrue = () => {\r\n\t\tif (!finding) {\r\n\t\t\tsetDraggingStart(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst setDraggingTargetTrue = () => {\r\n\t\tif (!finding) {\r\n\t\t\tsetDraggingTarget(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst nodesAreEqual = (node1, node2) => {\r\n\t\treturn node1[0] === node2[0] && node1[1] === node2[1];\r\n\t};\r\n\r\n\tlet grid = [];\r\n\tfor (let y = 0; y < props.height; y++) {\r\n\t\tfor (let x = 0; x < props.width; x++) {\r\n\t\t\tgrid.push([x, y]);\r\n\t\t}\r\n\t}\r\n\r\n\tgrid = grid.map(node => {\r\n\t\tlet type;\r\n\t\tif (walls[node]) {\r\n\t\t\ttype = \"wall\";\r\n\t\t} else if (path[node]) {\r\n\t\t\ttype = \"path\";\r\n\t\t} else if (visited[node]) {\r\n\t\t\ttype = \"visited\";\r\n\t\t} else {\r\n\t\t\ttype = \"none\";\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Node\r\n\t\t\t\ttype={type}\r\n\t\t\t\tstart={nodesAreEqual(start, node)}\r\n\t\t\t\ttarget={nodesAreEqual(target, node)}\r\n\t\t\t\tmakeStart={() => setStart([node[0], node[1]])}\r\n\t\t\t\tmakeTarget={() => setTarget([node[0], node[1]])}\r\n\t\t\t\tmakeWall={() => addWall(node)}\r\n\t\t\t\tdeleteWall={() => deleteWall(node)}\r\n\t\t\t\tmouseDown={mouseDown}\r\n\t\t\t\tdraggingStart={draggingStart}\r\n\t\t\t\tsetDraggingStartTrue={setDraggingStartTrue}\r\n\t\t\t\tdraggingTarget={draggingTarget}\r\n\t\t\t\tsetDraggingTargetTrue={setDraggingTargetTrue}\r\n\t\t\t\tkey={`${node[0]},${node[1]}`}\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonMouseDown={onMouseDownHandler}\r\n\t\t\tonMouseUp={onMouseUpHandler}\r\n\t\t\tonMouseLeave={onMouseLeaveHandler}\r\n\t\t\tstyle={gridStyle}\r\n\t\t>\r\n\t\t\t{grid}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Grid;\r\n","//BFS\r\n\r\nimport { Children } from \"react\";\r\n\r\nexport function getBFSAnimations(start, target, walls, width, height) {\r\n\tlet animations = [];\r\n\tlet queue = [start];\r\n\tlet visited = {};\r\n\tvisited[start] = true;\r\n\tlet prev = {};\r\n\tanimations.push([...start, \"visited\"]);\r\n\twhile (queue.length > 0) {\r\n\t\tlet node = queue.shift();\r\n\t\tlet neighbors = getPossibleNeighbors(node, walls, width, height);\r\n\t\tfor (let next of neighbors) {\r\n\t\t\tif (!visited[next]) {\r\n\t\t\t\tanimations.push([...next, \"visited\"]);\r\n\t\t\t\tqueue.push(next);\r\n\t\t\t\tvisited[next] = true;\r\n\t\t\t\tprev[next] = node;\r\n\t\t\t\tif (nodesAreEqual(target, next)) {\r\n\t\t\t\t\taddShortestPathAnimations(start, target, prev, animations);\r\n\t\t\t\t\treturn animations;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn animations;\r\n}\r\n\r\n//DFS\r\n\r\nexport function getDFSAnimations(start, target, walls, width, height) {\r\n\tlet animations = [];\r\n\tlet visited = {};\r\n\tlet prev = {};\r\n\tlet found = false;\r\n\tgetDFSAnimationsHelper(start, target, walls, width, height, animations, visited, prev);\r\n\tif (found) {\r\n\t\taddShortestPathAnimations(start, target, prev, animations);\r\n\t}\r\n\treturn animations;\r\n\r\n\tfunction getDFSAnimationsHelper(node, target, walls, width, height, animations, visited, prev) {\r\n\t\tvisited[node] = true;\r\n\t\tanimations.push([...node, \"visited\"]);\r\n\t\tif (nodesAreEqual(node, target)) {\r\n\t\t\tfound = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet neighbors = getPossibleNeighbors(node, walls, width, height);\r\n\t\tfor (let next of neighbors) {\r\n\t\t\tif (!visited[next] && !found) {\r\n\t\t\t\tprev[next] = node;\r\n\t\t\t\tgetDFSAnimationsHelper(next, target, walls, width, height, animations, visited, prev);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//A*\r\n\r\nexport function getAstarAnimations(start, target, walls, width, height) {\r\n\tlet animations = []\r\n\tlet visited = {}\r\n\tlet openList = []\r\n\tlet prev = {};\r\n\tstart.f = start.g = start.h = 0\r\n\ttarget.f = target.g = target.h = 0\r\n\topenList.push(start)\r\n\tconst p = .01;\r\n\twhile (openList.length > 0) {\r\n\t\tlet node = lowestf(openList)\r\n\t\tvisited[node] = true;\r\n\t\tanimations.push([...node, 'visited'])\r\n\t\tif (nodesAreEqual(node, target)) {\r\n\t\t\taddShortestPathAnimations(start, target, prev, animations);\r\n\t\t\treturn animations\r\n\t\t}\r\n\r\n\t\tlet neighbors = getPossibleNeighbors(node, walls, width, height);\r\n\t\tshuffle(neighbors)\r\n\t\t\r\n\t\tfor (let i = 0; i < neighbors.length; i++) {\r\n\r\n\t\t\tlet next = neighbors[i]\r\n\t\t\tif (visited[next]) {\t\t\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tnext.g = node.g + 1\r\n\t\t\tnext.h = heuristic(next, target)\r\n\t\t\tnext.h *= (p + 1.0)\r\n\t\t\tnext.f = next.g + next.h\r\n\r\n\t\t\tlet notBest = false\r\n\t\t\tif (openList.length > 0) {\r\n\t\t\t\tfor (let j = 0; j < openList.length; j++) {\r\n\t\t\t\t\tif (nodesAreEqual(next, openList[j]) && next.g >= openList[j].g) {\r\n\t\t\t\t\t\tnotBest = true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t\tif (notBest) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\topenList.push(next)\r\n\t\t\tprev[next] = node\r\n\t\t}\r\n\t}\r\n\treturn animations\r\n}\r\n\r\n\r\nfunction lowestf(list) {\r\n\tlet low = 0\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tif (list[i].f < list[low].f) {\r\n\t\t\tlow = i\r\n\t\t}\r\n\t}\r\n\tlet node = list.splice(low, 1)\r\n\treturn node[0]\r\n}\r\n\r\nfunction heuristic(node1, node2) {\r\n\tlet d1 = Math.abs(node1[0] - node2[0]);\r\n\tlet d2 = Math.abs(node1[1] - node2[1]);\r\n\treturn d1 + d2;\r\n}\r\n\r\nfunction f(node, start, target) {\r\n\treturn heuristic(node, start) + heuristic(node, target);\r\n}\r\n\r\nfunction getPossibleNeighbors(node, walls, width, height) {\r\n\tlet possibleNeighbors = [];\r\n\t//check right neighbor\r\n\tlet rightNeighbor = [node[0] + 1, node[1]];\r\n\tif (rightNeighbor[0] < width && !walls[rightNeighbor]) {\r\n\t\tpossibleNeighbors.push(rightNeighbor);\r\n\t}\r\n\t// check bottom neighbor\r\n\tlet bottomNeighbor = [node[0], node[1] - 1];\r\n\tif (bottomNeighbor[1] >= 0 && !walls[bottomNeighbor]) {\r\n\t\tpossibleNeighbors.push(bottomNeighbor);\r\n\t}\r\n\t//check left neighbor\r\n\tlet leftNeighbor = [node[0] - 1, node[1]];\r\n\tif (leftNeighbor[0] >= 0 && !walls[leftNeighbor]) {\r\n\t\tpossibleNeighbors.push(leftNeighbor);\r\n\t}\r\n\t//check top neighbor\r\n\tlet topNeighbor = [node[0], node[1] + 1];\r\n\tif (topNeighbor[1] < height && !walls[topNeighbor]) {\r\n\t\tpossibleNeighbors.push(topNeighbor);\r\n\t}\r\n\treturn possibleNeighbors;\r\n}\r\n\r\nfunction addShortestPathAnimations(start, target, prev, animations) {\r\n\tlet path = [];\r\n\tlet at = target;\r\n\twhile (!nodesAreEqual(at, start)) {\r\n\t\tpath.push(at);\r\n\t\tat = prev[at];\r\n\t}\r\n\tpath = path.reverse();\r\n\tpath.unshift(start);\r\n\tfor (let i = 0; i < path.length; i++) {\r\n\t\tanimations.push([...path[i], \"path\"]);\r\n\t}\r\n}\r\n\r\nfunction nodesAreEqual(node1, node2) {\r\n\treturn node1[0] === node2[0] && node1[1] === node2[1];\r\n}\r\n\r\n//Maze\r\n\r\nexport function getMazeAnimations(start, target, width, height) {\r\n\tlet animations = [];\r\n\tlet walls = {};\r\n\tfor (let i = 1; i < width; i += 2) {\r\n\t\tfor (let j = 0; j < height; j++) {\r\n\t\t\twalls[[i, j]] = true;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 1; i < height; i += 2) {\r\n\t\tfor (let j = 0; j < width; j++) {\r\n\t\t\twalls[[j, i]] = true;\r\n\t\t}\r\n\t}\r\n\twalls[start] = false;\r\n\twalls[target] = false;\r\n\tanimations.push(walls);\r\n\r\n\tlet startNode = [0, 0];\r\n\tlet visited = {};\r\n\tgetMazeAnimationsHelper(startNode, width, height, animations, visited);\r\n\r\n\treturn animations;\r\n}\r\n\r\nfunction getMazeAnimationsHelper(node, width, height, animations, visited) {\r\n\tvisited[node] = true;\r\n\tlet neighbors = getPossibleMazeNeighbors(node, width, height);\r\n\tfor (let next of neighbors) {\r\n\t\tif (!visited[next]) {\r\n\t\t\tlet wall;\r\n\t\t\tif (node[0] - next[0] === -2) {\r\n\t\t\t\twall = [node[0] + 1, node[1]];\r\n\t\t\t} else if (node[0] - next[0] === 2) {\r\n\t\t\t\twall = [node[0] - 1, node[1]];\r\n\t\t\t} else if (node[1] - next[1] === -2) {\r\n\t\t\t\twall = [node[0], node[1] + 1];\r\n\t\t\t} else {\r\n\t\t\t\twall = [node[0], node[1] - 1];\r\n\t\t\t}\r\n\t\t\tanimations.push(wall);\r\n\t\t\tgetMazeAnimationsHelper(next, width, height, animations, visited);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getPossibleMazeNeighbors(node, width, height) {\r\n\tlet possibleNeighbors = [];\r\n\t//check right neighbor\r\n\tlet rightNeighbor = [node[0] + 2, node[1]];\r\n\tif (rightNeighbor[0] < width) {\r\n\t\tpossibleNeighbors.push(rightNeighbor);\r\n\t}\r\n\t// check bottom neighbor\r\n\tlet bottomNeighbor = [node[0], node[1] - 2];\r\n\tif (bottomNeighbor[1] >= 0) {\r\n\t\tpossibleNeighbors.push(bottomNeighbor);\r\n\t}\r\n\t//check left neighbor\r\n\tlet leftNeighbor = [node[0] - 2, node[1]];\r\n\tif (leftNeighbor[0] >= 0) {\r\n\t\tpossibleNeighbors.push(leftNeighbor);\r\n\t}\r\n\t//check top neighbor\r\n\tlet topNeighbor = [node[0], node[1] + 2];\r\n\tif (topNeighbor[1] < height) {\r\n\t\tpossibleNeighbors.push(topNeighbor);\r\n\t}\r\n\tshuffle(possibleNeighbors);\r\n\treturn possibleNeighbors;\r\n}\r\n\r\nfunction shuffle(array) {\r\n\tfor (let i = array.length - 1; i > 0; i--) {\r\n\t\tlet j = Math.floor(Math.random() * (i + 1));\r\n\t\t[array[i], array[j]] = [array[j], array[i]];\r\n\t}\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"../../components/Grid/Grid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n\tgetBFSAnimations,\r\n\tgetDFSAnimations,\r\n\tgetMazeAnimations,\r\n\tgetAstarAnimations,\r\n} from \"../../algorithms/pathFinding\";\r\nimport * as actions from \"../../store/actions\";\r\nimport classes from \"./Pathfinder.module.css\";\r\nimport { Paper, Button, Slider } from \"@material-ui/core\";\r\nimport Selection from \"../../components/UI/Selection/Selection\";\r\n\r\nconst descriptions = [\r\n\t<p>\r\n\t\tThe <span style={{ fontWeight: \"600\" }}>A* search</span> algorithm introduces a heuristic into\r\n\t\ta regular graph-searching algorithm, essentially planning ahead at each step so a more optimal\r\n\t\tdecision is made. This algorithm guarantees the shortest path possible.\r\n\t</p>,\r\n\t<p>\r\n\t\t<span style={{ fontWeight: \"600\" }}>Breadth first search</span> is a traversing algorithm\r\n\t\twhich starts from a selected node and continues to traverse the graph layerwise thus exploring\r\n\t\tthe neighbouring nodes. This algorithm guarantees the shortest path possible.\r\n\t</p>,\r\n\t<p>\r\n\t\t<span style={{ fontWeight: 600 }}>Depth first search</span> is a traversing algorithm which\r\n\t\tuses the idea of backtracking. It explores all the nodes by going forward if possible or uses\r\n\t\tbacktracking. Unlike BFS, it does not guarantee the shortest path, but rather if such a path\r\n\t\teven exist.\r\n\t</p>,\r\n];\r\n\r\nconst PathFinder = props => {\r\n\tconst [gridX, setGridX] = useState(0);\r\n\tconst [gridY, setGridY] = useState(0);\r\n\tconst [current, setCurrent] = useState(0);\r\n\tconst start = useSelector(state => state.path.start);\r\n\tconst target = useSelector(state => state.path.target);\r\n\tconst walls = useSelector(state => state.path.walls);\r\n\tconst finding = useSelector(state => state.path.finding);\r\n\tconst animationSpeed = useSelector(state => state.path.animationSpeed);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst playPathFindingAnimation = animations =>\r\n\t\tdispatch(actions.playPathFindingAnimation(animations));\r\n\tconst playMazeAnimation = animations => dispatch(actions.playMazeAnimation(animations));\r\n\tconst stopAnimation = () => dispatch(actions.stopAnimation());\r\n\tconst clearWalls = () => dispatch(actions.clearAll());\r\n\tconst setStart = node => dispatch(actions.setStart(node));\r\n\tconst setTarget = node => dispatch(actions.setTarget(node));\r\n\tconst setAnimationSpeed = speed => dispatch(actions.setPathSpeed(speed));\r\n\r\n\tuseEffect(() => {\r\n\t\tsetGrid();\r\n\t\twindow.addEventListener(\"resize\", setGrid);\r\n\t\treturn () => {\r\n\t\t\tclearWalls();\r\n\t\t\tstopAnimation();\r\n\t\t\twindow.removeEventListener(\"resize\", setGrid);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tlet nodeWidth = 25;\r\n\tlet media = window.matchMedia(\"(max-width: 700px)\");\r\n\tif (media.matches) {\r\n\t\tnodeWidth = 15;\r\n\t}\r\n\r\n\tconst setGrid = () => {\r\n\t\tlet el = document.getElementById(\"grid\");\r\n\t\tlet width = el.offsetWidth;\r\n\t\tlet height = el.offsetHeight;\r\n\t\tlet x = Math.floor(width / nodeWidth) - 1;\r\n\t\tlet y = Math.floor(height / nodeWidth) - 1;\r\n\t\tlet start = [Math.floor(x / 5), Math.floor(y / 5)];\r\n\t\tlet target = [Math.floor((4 * x) / 5), Math.floor((4 * y) / 5)];\r\n\t\tsetStart(start);\r\n\t\tsetTarget(target);\r\n\t\tsetGridX(x);\r\n\t\tsetGridY(y);\r\n\t};\r\n\r\n\tconst changeDescriptionHandler = index => {\r\n\t\tsetCurrent(index);\r\n\t};\r\n\r\n\tconst animationSpeedChangeHandler = (event, newValue) => {\r\n\t\tsetAnimationSpeed(Math.abs(newValue - 120));\r\n\t};\r\n\r\n\tconst options = {\r\n\t\t\"A* Search\": () =>\r\n\t\t\tplayPathFindingAnimation(getAstarAnimations(start, target, walls, gridX, gridY)),\r\n\t\t\"Breadth First\": () =>\r\n\t\t\tplayPathFindingAnimation(getBFSAnimations(start, target, walls, gridX, gridY)),\r\n\t\t\"Depth First\": () =>\r\n\t\t\tplayPathFindingAnimation(getDFSAnimations(start, target, walls, gridX, gridY)),\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.PathFinder}>\r\n\t\t\t<div className={classes.GridContainer}>\r\n\t\t\t\t<div style={{ height: \"100%\" }} id=\"grid\">\r\n\t\t\t\t\t<div className={classes.Grid}>\r\n\t\t\t\t\t\t<Grid width={gridX} height={gridY} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Paper\r\n\t\t\t\televation={10}\r\n\t\t\t\tstyle={{ borderRadius: 0, marginTop: media.matches ? '.5rem' : '0', paddingBottom: media.matches ? '4rem' : '0'}}\r\n\t\t\t\tclassName={classes.ControlsContainer}\r\n\t\t\t>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1 style={{ marginBottom: \"3rem\" }}>Path Finding</h1>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tonClick={() => playMazeAnimation(getMazeAnimations(start, target, gridX, gridY))}\r\n\t\t\t\t\t\tdisabled={finding}\r\n\t\t\t\t\t\tstyle={{ marginRight: \".8rem\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGenerate Maze\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tonClick={clearWalls}\r\n\t\t\t\t\t\tdisabled={finding}\r\n\t\t\t\t\t\tstyle={{ marginRight: \".8rem\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tclear\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tonClick={stopAnimation}\r\n\t\t\t\t\t\tdisabled={!finding}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tstop\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<p className={classes.SliderTitle}>Animation Speed</p>\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\tonChange={animationSpeedChangeHandler}\r\n\t\t\t\t\t\tvalue={Math.abs(animationSpeed - 120)}\r\n\t\t\t\t\t\tdisabled={finding}\r\n\t\t\t\t\t\tvalueLabelDisplay\r\n\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\tstyle={{ marginBottom: \"3rem\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Selection\r\n\t\t\t\t\t\tonChange={index => changeDescriptionHandler(index)}\r\n\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\tdisabled={finding}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={classes.About}>{descriptions[current]}</div>\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PathFinder;\r\n","import React from \"react\";\r\nimport NodeIcon from \"@material-ui/icons/TripOrigin\";\r\n\r\nconst Node = props => {\r\n\tconst style = {\r\n\t\twidth: `${props.size}px`,\r\n\t\theight: `${props.size}px`,\r\n      backgroundColor: props.visited ? \"#ee426799\" : \"#fafafa\",\r\n      border: `${props.size / 5.5}px solid ${props.visited ? \"#EE4266\" : \"#05668d\"}`,\r\n\t\tborderRadius: \"1000px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\ttransition: \"border backgroundColor .3s ease-out\"\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={style} id={`node${props.nodeId}`} />\r\n\t);\r\n};\r\n\r\nexport default Node;\r\n","import React from \"react\";\r\n\r\nconst Edge = props => {\r\n\treturn (\r\n\t\t<svg style={{ position: \"absolute\" }} width=\"100%\" height=\"100%\">\r\n\t\t\t<line x1={props.x1} y1={props.y1} x2={props.x2} y2={props.y2} stroke=\"#c0c0c0\" />\r\n\t\t</svg>\r\n\t);\r\n};\r\n\r\nexport default Edge;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Node from \"./Node/Node\";\r\nimport Edge from \"./Edge/Edge\";\r\n\r\nconst Tree = props => {\r\n\tconst [edges, setEdges] = useState([]);\r\n\tconst traversed = useSelector(state => state.traverse.traversed);\r\n\tconst style = {\r\n\t\tdisplay: \"grid\",\r\n\t\tgridTemplateRows: `repeat(${props.height + 1}, 1fr)`,\r\n\t\theight: \"100%\",\r\n\t\tposition: \"relative\",\r\n\t};\r\n\r\n\tconst levelStyle = {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"space-evenly\",\r\n\t\ttextalign: \"center\",\r\n\t};\r\n\r\n\tconst tree = [];\r\n\tlet capacity = 1;\r\n\tlet nodeIndex = 0;\r\n\tlet media = window.matchMedia(\"(max-width: 410px)\");\r\n\tconst size = (media.matches ? 35 : 50) / props.height\r\n\tfor (let i = 0; i < props.height + 1; i++) {\r\n\t\tlet currentLevel = [];\r\n\t\tfor (let j = 0; j < capacity; j++) {\r\n\t\t\tcurrentLevel.push(\r\n\t\t\t\t<Node\r\n\t\t\t\t\tsize={size}\r\n\t\t\t\t\tnodeId={nodeIndex}\r\n\t\t\t\t\tkey={nodeIndex}\r\n\t\t\t\t\tvisited={traversed[nodeIndex]}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tnodeIndex++;\r\n\t\t}\r\n\t\ttree.push(\r\n\t\t\t<div style={levelStyle} key={capacity}>\r\n\t\t\t\t{currentLevel}\r\n\t\t\t</div>\r\n\t\t);\r\n\t\tcapacity *= 2;\r\n\t}\r\n\t\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"resize\", createEdges);\r\n\t\tcreateEdges();\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", createEdges);\r\n\t\t};\r\n\t}, [props.height]);\r\n\r\n\tconst createEdges = () => {\r\n\t\tconst tree = document.getElementById(\"tree\");\r\n\t\tconst rectTree = tree.getBoundingClientRect();\r\n\t\tconst edges = [];\r\n\t\tfor (let i = 0; i < Math.floor((Math.pow(2, props.height + 1) - 1) / 2); i++) {\r\n\t\t\tconst node = document.getElementById(`node${i}`);\r\n\t\t\tconst rectNode = node.getBoundingClientRect();\r\n\t\t\tconst left = document.getElementById(`node${i * 2 + 1}`);\r\n\t\t\tconst rectLeft = left.getBoundingClientRect();\r\n\t\t\tconst right = document.getElementById(`node${i * 2 + 2}`);\r\n\t\t\tconst rectRight = right.getBoundingClientRect();\r\n\t\t\tedges.push(\r\n\t\t\t\t<Edge\r\n\t\t\t\t\tx1={rectTree.right - (rectNode.right + rectNode.left) / 2}\r\n\t\t\t\t\ty1={rectNode.bottom - rectTree.top}\r\n\t\t\t\t\tx2={rectTree.right - (rectLeft.right + rectLeft.left) / 2}\r\n\t\t\t\t\ty2={rectLeft.top - rectTree.top}\r\n\t\t\t\t/>,\r\n\t\t\t\t<Edge\r\n\t\t\t\t\tx1={rectTree.right - (rectNode.right + rectNode.left) / 2}\r\n\t\t\t\t\ty1={rectNode.bottom - rectTree.top}\r\n\t\t\t\t\tx2={rectTree.right - (rectRight.right + rectRight.left) / 2}\r\n\t\t\t\t\ty2={rectRight.top - rectTree.top}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\tsetEdges(edges);\r\n\t};\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<div style={style} id=\"tree\">\r\n\t\t\t{tree}\r\n\t\t\t{edges}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Tree;\r\n","export function getLevelOrderAnimations(height) {\r\n   const animations = []\r\n   const queue = [0]\r\n   while (queue.length > 0) {\r\n      let current = queue.shift();\r\n      animations.push(current)\r\n      if (current * 2 + 2 < Math.pow(2, height + 1) - 1) {\r\n         queue.push(current * 2 + 1)\r\n         queue.push(current * 2 + 2)\r\n      }\r\n   }\r\n   return animations\r\n}\r\n\r\nexport function getInOrderAnimations(height) {\r\n   let animations = []\r\n   inOrderRec(height, 0, animations)\r\n   return animations\r\n}\r\n\r\nfunction inOrderRec(height, index, animations) {\r\n   if (index < Math.pow(2, height + 1) - 1) {\r\n      inOrderRec(height, index * 2 + 1, animations)\r\n      animations.push(index)\r\n      inOrderRec(height, index * 2 + 2, animations)\r\n   }\r\n}\r\n\r\nexport function getPostOrderAnimations(height) {\r\n   let animations = []\r\n   postOrderRec(height, 0, animations)\r\n   return animations\r\n}\r\n\r\nfunction postOrderRec(height, index, animations) {\r\n   if (index < Math.pow(2, height + 1) - 1) {\r\n      postOrderRec(height, index * 2 + 1, animations)\r\n      postOrderRec(height, index * 2 + 2, animations)\r\n      animations.push(index)\r\n   }\r\n}\r\n\r\nexport function getPreOrderAnimations(height) {\r\n   let animations = []\r\n   preOrderRec(height, 0, animations)\r\n   return animations\r\n}\r\n\r\nfunction preOrderRec(height, index, animations) {\r\n   if (index < Math.pow(2, height + 1) - 1) {\r\n      animations.push(index)\r\n      preOrderRec(height, index * 2 + 1, animations)\r\n      preOrderRec(height, index * 2 + 2, animations)\r\n   }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Tree from \"../../components/Tree/Tree\";\r\nimport classes from \"./Traverser.module.css\";\r\nimport { Paper, Button, Slider } from \"@material-ui/core\";\r\nimport Selection from \"../../components/UI/Selection/Selection\";\r\nimport * as actions from \"../../store/actions\";\r\nimport {\r\n\tgetLevelOrderAnimations,\r\n\tgetInOrderAnimations,\r\n\tgetPostOrderAnimations,\r\n\tgetPreOrderAnimations,\r\n} from \"../../algorithms/traversing\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst descriptions = [\r\n\t<p>\r\n\t\t<span style={{ fontWeight: \"600\" }}>Pre-order traversal</span> visits all nodes of a tree by\r\n\t\tprocessing the root, then recursively processing all subtrees. Equivalent to a depth-first\r\n\t\tsearch from the root.\r\n\t</p>,\r\n\t<p>\r\n\t\tAn <span style={{ fontWeight: \"600\" }}>in-order traversal</span> first visits the left child\r\n\t\t(including its entire subtree), then visits the node, and finally visits the right child\r\n\t\t(including its entire subtree).\r\n\t</p>,\r\n\t<p>\r\n\t\tA <span style={{ fontWeight: \"600\" }}>post-order traversal</span> first visits the left child\r\n\t\t(including its entire subtree), then the right child (including its entire subtree), and\r\n\t\tfinally visits the node.\r\n\t</p>,\r\n\t<p>\r\n\t\t<span style={{ fontWeight: 600 }}>Level-order traversal</span> processes all nodes of a tree by\r\n\t\tdepth: first the root, then the children of the root, etc. Equivalent to a breadth-first\r\n\t\tsearch from the root.\r\n\t</p>,\r\n];\r\n\r\nconst Traversing = props => {\r\n\tconst [current, setCurrent] = useState(0);\r\n\tconst traversing = useSelector(state => state.traverse.traversing);\r\n\tconst height = useSelector(state => state.traverse.height);\r\n\tconst animationSpeed = useSelector(state => state.traverse.animationSpeed);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst setHeight = newHeight => dispatch(actions.setHeight(newHeight));\r\n\tconst setAnimationSpeed = speed => dispatch(actions.setTraverseSpeed(speed));\r\n\tconst playTraversingAnimation = animations =>\r\n\t\tdispatch(actions.playTraversingAnimation(animations));\r\n\tconst stopTraversingAnimation = () => dispatch(actions.stopTraversingAnimation());\r\n\tconst clearTraversed = () => dispatch(actions.clearTraversed());\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tstopTraversingAnimation();\r\n\t\t\tclearTraversed();\r\n\t\t};\r\n\t}, []);\r\n\r\n\tconst heightChangeHandler = (event, newHeight) => {\r\n\t\tsetHeight(newHeight);\r\n\t\tclearTraversed();\r\n\t};\r\n\r\n\tconst animationSpeedChangeHandler = (event, newValue) => {\r\n\t\tsetAnimationSpeed(Math.abs(newValue - 110));\r\n\t};\r\n\r\n\tconst changeDescriptionHandler = index => {\r\n\t\tsetCurrent(index);\r\n\t};\r\n\r\n\tconst options = {\r\n\t\t\"Pre-order\": () => playTraversingAnimation(getPreOrderAnimations(height)),\r\n\t\t\"In-order\": () => playTraversingAnimation(getInOrderAnimations(height)),\r\n\t\t\"Post-order\": () => playTraversingAnimation(getPostOrderAnimations(height)),\r\n\t\t\"Level-order\": () => playTraversingAnimation(getLevelOrderAnimations(height)),\r\n\t};\r\n\r\n\tlet media = window.matchMedia(\"(max-width: 700px)\");\r\n\treturn (\r\n\t\t<div className={classes.Traverser}>\r\n\t\t\t<div className={classes.TreeContainer}>\r\n\t\t\t\t<div className={classes.Tree}>\r\n\t\t\t\t\t<Tree height={height} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Paper\r\n\t\t\t\tclassName={classes.ControlsContainer}\r\n\t\t\t\televation={10}\r\n\t\t\t\tstyle={{ borderRadius: 0, paddingBottom: media.matches ? \"4rem\" : \"0\" }}\r\n\t\t\t>\r\n\t\t\t\t<div className={classes.Controls}>\r\n\t\t\t\t\t<h1 style={{ marginBottom: \"3rem\" }}>Traversing</h1>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={stopTraversingAnimation}\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tdisableElevation\r\n\t\t\t\t\t\tdisabled={!traversing}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tstop\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<p className={classes.SliderTitle}>Tree Height</p>\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\tvalueLabelDisplay\r\n\t\t\t\t\t\tonChange={heightChangeHandler}\r\n\t\t\t\t\t\tmax={5}\r\n\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\tvalue={height}\r\n\t\t\t\t\t\tdisabled={traversing}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p className={classes.SliderTitle}>Animation Speed</p>\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\tonChange={animationSpeedChangeHandler}\r\n\t\t\t\t\t\tvalue={Math.abs(animationSpeed - 110)}\r\n\t\t\t\t\t\tdisabled={traversing}\r\n\t\t\t\t\t\tvalueLabelDisplay\r\n\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\tstyle={{ marginBottom: \"3rem\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Selection\r\n\t\t\t\t\t\tonChange={index => changeDescriptionHandler(index)}\r\n\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\tdisabled={traversing}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.About}>{descriptions[current]}</div>\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Traversing;\r\n","import React from \"react\";\nimport Toolbar from \"./components/UI/Toolbar/Toolbar\";\nimport Sorter from \"./containers/Sorter/Sorter\";\nimport PathFinder from \"./containers/PathFinder/PathFinder\";\nimport Traverser from \"./containers/Traverser/Traverser\"\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\n\nimport \"./App.css\";\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#05668d',\n\t\t\tlight: '#c3e5f3'\n\t\t},\n\t},\n\ttypography: {\n\t\tfontFamily: [ 'Work Sans' ].join(','), \n\t\tfontSize: 16\n\t}\n})\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<Toolbar />\n\t\t\t\t<Switch>\t\t\t\n\t\t\t\t\t<Route path=\"/path-finding\" component={PathFinder} />\n\t\t\t\t\t<Route path=\"/traversing\" component={Traverser} />\n\t\t\t\t\t<Route path=\"/sorting\" component={Sorter} />\n\t\t\t\t\t<Redirect to=\"/sorting\" />\n\t\t\t\t</Switch>\n\t\t\t</ThemeProvider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n\tarray: [],\r\n\tsorting: false,\r\n\tsorted: false,\r\n\tarraySize: 50,\r\n\tactive: [],\r\n\tanimationSpeed: 50,\r\n};\r\n\r\nconst setNewArray = (state, action) => {\r\n\tlet array = [];\r\n\tfor (let i = 0; i < state.arraySize; i++) {\r\n\t\tarray.push(Math.floor(Math.random() * (state.arraySize - 4)) + 5);\r\n\t}\r\n\treturn { ...state, array };\r\n};\r\n\r\nconst setSorting = (state, action) => {\r\n\treturn { ...state, sorting: action.sorting };\r\n};\r\n\r\nconst setSorted = (state, action) => {\r\n\treturn { ...state, sorted: action.sorted };\r\n};\r\n\r\nconst setArraySize = (state, action) => {\r\n\treturn { ...state, arraySize: action.arraySize };\r\n};\r\n\r\nconst setAnimationSpeed = (state, action) => {\r\n\treturn { ...state, animationSpeed: action.animationSpeed };\r\n};\r\n\r\nconst setActive = (state, action) => {\r\n\treturn { ...state, active: action.active };\r\n};\r\n\r\nconst swapValues = (state, action) => {\r\n\tlet array = [...state.array];\r\n\tlet temp = array[action.index1];\r\n\tarray[action.index1] = array[action.index2];\r\n\tarray[action.index2] = temp;\r\n\treturn { ...state, array };\r\n};\r\n\r\nconst replaceValue = (state, action) => {\r\n\tlet array = [...state.array];\r\n\tarray[action.index] = action.value;\r\n\treturn { ...state, array };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.SET_NEW_ARRAY:\r\n\t\t\treturn setNewArray(state, action);\r\n\t\tcase actionTypes.SET_SORTING:\r\n\t\t\treturn setSorting(state, action);\r\n\t\tcase actionTypes.SET_SORTED:\r\n\t\t\treturn setSorted(state, action);\r\n\t\tcase actionTypes.SET_ARRAY_SIZE:\r\n\t\t\treturn setArraySize(state, action);\r\n\t\tcase actionTypes.SET_ANIMATION_SPEED:\r\n\t\t\treturn setAnimationSpeed(state, action);\r\n\t\tcase actionTypes.SET_ACTIVE:\r\n\t\t\treturn setActive(state, action);\r\n\t\tcase actionTypes.SWAP_VALUES:\r\n\t\t\treturn swapValues(state, action);\r\n\t\tcase actionTypes.REPLACE_VALUE:\r\n\t\t\treturn replaceValue(state, action);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst intitialState = {\r\n\tstart: [4, 5],\r\n\ttarget: [16, 15],\r\n\twalls: {},\r\n\tvisited: {},\r\n\tpath: {},\r\n\tfinding: false,\r\n\tanimationSpeed: 50\r\n};\r\n\r\nconst setStart = (state, action) => {\r\n\tlet start = action.node;\r\n\treturn { ...state, start };\r\n};\r\n\r\nconst setTarget = (state, action) => {\r\n\tlet target = action.node;\r\n\treturn { ...state, target };\r\n};\r\n\r\nconst setWalls = (state, action) => {\r\n\tlet walls = action.walls;\r\n\treturn { ...state, walls };\r\n};\r\n\r\nconst addWall = (state, action) => {\r\n\tlet walls = { ...state.walls };\r\n\twalls[action.node] = true;\r\n\treturn { ...state, walls };\r\n};\r\n\r\nconst deleteWall = (state, action) => {\r\n\tlet walls = { ...state.walls };\r\n\twalls[action.node] = false;\r\n\treturn { ...state, walls };\r\n};\r\n\r\nconst addVisited = (state, action) => {\r\n\tlet visited = { ...state.visited };\r\n\tvisited[action.node] = true;\r\n\treturn { ...state, visited };\r\n};\r\n\r\nconst addPath = (state, action) => {\r\n\tlet path = { ...state.path };\r\n\tpath[action.node] = true;\r\n\treturn { ...state, path };\r\n};\r\n\r\nconst clearAll = (state, action) => {\r\n\tlet walls = {};\r\n\tlet path = {};\r\n\tlet visited = {};\r\n\treturn { ...state, walls, path, visited };\r\n};\r\n\r\nconst clearVisitedAndPath = (state, action) => {\r\n\tlet path = {};\r\n\tlet visited = {};\r\n\treturn { ...state, visited, path };\r\n};\r\n\r\nconst setFinding = (state, action) => {\r\n\tlet finding = action.finding;\r\n\treturn { ...state, finding };\r\n};\r\n\r\nconst setPathSpeed = (state, action) => {\r\n\treturn {...state, animationSpeed: action.speed }\r\n}\r\n\r\nconst reducer = (state = intitialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.SET_START:\r\n\t\t\treturn setStart(state, action);\r\n\t\tcase actionTypes.SET_TARGET:\r\n\t\t\treturn setTarget(state, action);\r\n\t\tcase actionTypes.SET_WALLS:\r\n\t\t\treturn setWalls(state, action);\r\n\t\tcase actionTypes.ADD_WALL:\r\n\t\t\treturn addWall(state, action);\r\n\t\tcase actionTypes.DELETE_WALL:\r\n\t\t\treturn deleteWall(state, action);\r\n\t\tcase actionTypes.ADD_VISITED:\r\n\t\t\treturn addVisited(state, action);\r\n\t\tcase actionTypes.ADD_PATH:\r\n\t\t\treturn addPath(state, action);\r\n\t\tcase actionTypes.CLEAR_ALL:\r\n\t\t\treturn clearAll(state, action);\r\n\t\tcase actionTypes.CLEAR_VISITED_AND_PATH:\r\n\t\t\treturn clearVisitedAndPath(state, action);\r\n\t\tcase actionTypes.SET_FINDING:\r\n\t\t\treturn setFinding(state, action);\r\n\t\tcase actionTypes.SET_PATH_SPEED:\r\n\t\t\treturn setPathSpeed(state, action)\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n\ttraversing: false,\r\n\theight: 3,\r\n\ttraversed: {},\r\n\tanimationSpeed: 50,\r\n};\r\n\r\nconst setHeight = (state, action) => {\r\n\treturn { ...state, height: action.height };\r\n};\r\n\r\nconst setAnimationSpeed = (state, action) => {\r\n\treturn { ...state, animationSpeed: action.speed };\r\n};\r\n\r\nconst addTraversed = (state, action) => {\r\n\tlet traversed = { ...state.traversed };\r\n\ttraversed[action.index] = true;\r\n\treturn { ...state, traversed };\r\n};\r\n\r\nconst setTraversing = (state, action) => {\r\n\treturn { ...state, traversing: action.traversing };\r\n};\r\n\r\nconst clearTraversed = (state, action) => {\r\n\treturn { ...state, traversed: {} };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.SET_HEIGHT:\r\n\t\t\treturn setHeight(state, action);\r\n\t\tcase actionTypes.ADD_TRAVERSED:\r\n\t\t\treturn addTraversed(state, action);\r\n\t\tcase actionTypes.SET_TRAVERSE_SPEED:\r\n\t\t\treturn setAnimationSpeed(state, action);\r\n\t\tcase actionTypes.SET_TRAVERSING:\r\n\t\t\treturn setTraversing(state, action);\r\n\t\tcase actionTypes.CLEAR_TRAVERSED:\r\n\t\t\treturn clearTraversed(state, action);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport sorterReducer from \"./store/reducers/sorterReducer\";\r\nimport pathFindingReducer from \"./store/reducers/pathFindingReducer\";\r\nimport traversingReducer from \"./store/reducers/traversingReducer\";\r\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst rootReducer = combineReducers({ sort: sorterReducer, path: pathFindingReducer, traverse: traversingReducer });\r\n\r\nconst composeEnhancers =\r\n\tprocess.env.NODE_ENV === \"development\"\r\n\t\t? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n\t\t: null || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n\t<Provider store={store}>\r\n\t\t<BrowserRouter>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>\r\n\t</Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}